# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Set up yarn cache
        uses: actions/cache@v1
        with:
          path: ./node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Set up next cache
        uses: actions/cache@v1
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('**/yarn.lock') }}

      - name: Write all git secrets to .env file
        run: |
          echo "PAYLOAD_SECRET_KEY=${{ secrets.PAYLOAD_SECRET_KEY }}" > .env
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
          echo "NEXT_PUBLIC_SERVER_URL=${{ secrets.NEXT_PUBLIC_SERVER_URL }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env

      - name: npm install, build, and test
        run: |
          yarn --production=false --frozen-lockfile --network-timeout 1000000000
          yarn build

      - name: zip artifact
        run: zip -r artifact.zip . -x .git/\* .github/\* .vscode/\* .next/cache/\* node_modules/\*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: ./artifact.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Setup sshpass
        run: |
          sudo apt-get install -y sshpass

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip artifact.zip

      - name: 'Azure CLI Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        run: |
          az webapp create-remote-connection --subscription ${{ secrets.AZURE_SUBSCRIPTION }} -g ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} -n ${{ secrets.AZURE_WEBAPP_NAME }} -p 5000 &
          sleep 25
          ./deploy.sh --host localhost --user root --password Docker! --port 5000 --commit ${{ github.sha }}
